```{python}
import pandas as pd 
import numpy as np
```

```{python}
data = pd.read_csv('../data/synergy/run_expectancy.csv')
```

```{python}
def summarize_bases(row):
    '''returns base number if player is on said base, else '''
    return (f"{'1' if row['on_1b'] else '_'}"
            f"{'2' if row['on_2b'] else '_'}"
            f"{'3' if row['on_3b'] else '_'}")

# summarize data for runners on base 
data['base_state'] = data.apply(summarize_bases, axis = 1)

# group by combinations of outs and runners on base
run_expectancy = data.groupby(['outs', 'base_state'])

# return to data frame structure
run_expectancy = run_expectancy['runs_scored'].mean().reset_index()
```

```{python}
# pivot such that outs are columns
run_exp = run_expectancy.pivot_table(
    index = 'base_state', 
    columns = 'outs', 
    values = 'runs_scored', 
    aggfunc = 'mean'
)

# format numbers to three decimal places
pd.options.display.float_format = '{:.3f}'.format

run_exp
```

```{python}
# initalize walk expectancy
walk_re = 0

# sum all differences in run expectancy caused by a walk
for i in range(3):
    walk_re += ((run_exp[i]['1__'] - run_exp[i]['___']) + 
                (run_exp[i]['12_'] - run_exp[i]['1__']) +
                (run_exp[i]['12_'] - run_exp[i]['_2_']) +
                (run_exp[i]['1_3'] - run_exp[i]['__3']) + 
                (run_exp[i]['123'] - run_exp[i]['12_']) +
                (run_exp[i]['123'] - run_exp[i]['1_3']) + 
                (run_exp[i]['123'] - run_exp[i]['_23']))

# divide by number of walks
walk_re = walk_re / 119

walk_re
```